13.07.2015.
- WriteToLog parameters finally enclosed in only one parentheses pair :)
27.06.2015.
- development is going fine, lot of bugs have been fixed and it feels like I
  might be back on track; the reason I was writing this entry was to note that
  GCC is treating bool as single byte value, while Watcom was treating it as
  full double word - this is what asm code was expecting and it already caused
  few weird and hard to track bugs
22.06.2015.
- some small bugs fixed, artefacts of porting are still showing up; today was
  forced to merge .rdata into .data despite having support for it in pe2bin -
  it seems executable was built in such a way that beginning of an array in bss
  section was before the end of data (despite alignment, probably to use space
  more efficiently); however I have no idea how to detect this, and correctly
  offset fixup to point to bss (since reference is within raw size of .data
  section)
  edit: lowering file-align in alink fixed that problem even without merging,
  but both lowering alignment and merging .rdata lowered executable size, so I'm
  using both now ;)
  edit 2: just discovered that I did some testing with -Os and forgot it on; the
  whole deal was probably some size optimization... right now on -O3 it leaves
  plenty of space between last data and first bss byte
29.05.2015.
- wrote IPX server in Python to be used in stress testing the network (still
  gotta implement packet loss, lag inducing and packet reordering)
24.05.2015.
- there are still some bugs, but porting to GCC is almost done!
15.05.2015.
- lots of fixes during the porting; especially to pe2bin and alink, and even
  bindmp
02.05.2014.
- porting the source to GCC is under-way
- fixed perl makefile to include it's own timestamp in rebuild calculation - now
  everything rebuilds if script is changed (as it should)
11.11.2014.
- was well on my way implementing SWOS calls through dll import table, but
  after giving it some more thought decided against it; if implemented that
  way, each API would need to have 4 bytes set aside to hold function address,
  and indirect call would take 6 bytes, so 10 bytes in total per call; current
  calla implementation only requires 7; we don't really need separate table for
  those function addresses, since they're actually known before hand - it's
  enough to reference the symbol; entire problem comes from a fact that it's
  hard to instruct compiler to call functions in a specific way - normally
  they're just relative calls, or go through a pointer; we actually need
  absolute call to be generated (like calla does)
- thought I could change calla macro in asm to generate absolute call from
  memory location, but Intel never made instruction to do that.. we can only
  call indirect or far absolute.. no near absolute
- and fixed a little buffer overflow when we receive game name from network...
  oopsie!
10.11.2014.
- caught a mistake renaming 68k registers in two places.. yikes! so double
  checked everything again, it looks good now
07.11.2014.
- finally switched to real 68k register names... finally!
06.11.2014.
- changed bitmap drawing function from asm to C but forgot to set which
  register gets which param... wooops, and found out just now; seemingly small
  changes can have potent effect, one can never be too careful
05.11.2014.
- found out iswhat macros were vulnerable (isspace, isdigit...), they weren't
  normalizing input index before accessing the table, they were assuming it was
  a char; this caused infinite loop in xml parser when last character was
  whitespace following non-whitespace - ouch...
30.10.2014.
- xml parser finally passed tests... note to self: never make your own xml(ish)
  parser again, not even primitive and simplified as this one
16.10.2014.
- xml lexer passed tests
01.10.2014.
- buffered file tests passed, now the log will go through it, increasing
  performances in debug version and hopefully making it usable for game play
29.09.2014.
- did a funny thing today - wrote a simple DOS file access to WinAPI layer to
  do a test of buffered files: it worked by replacing each file-related int 21h
  call with invalid opcode (ud2), then installing exception handler which would
  inspect registers, re-route everything through WinAPI, sort returned data
  back to registers, and continue execution right after invalid bytes; it
  actually worked surprisingly well!
15.09.2014.
- big fuss with test build symbols - in util.c we had some functions such as
  memmove which were only wrappers for SWOS' memmove (swos_libc_memmove_), and
  in mock file I was trying to reroute it to Watcom's memmove, but the linker
  was discovering symbol in util.c and linked to it - resulting in lovely stack
  overflow due to infinite recursion :P; managed to fix it by explicitly
  listing object files from lib files _BEFORE_ user obj files
14.09.2014.
- source ported to OpenWatcom - he's complaining more than his daddy and has
  already caught some errors that have been sanitized; now SWOS++ might compile
  on modern Windows, I'll see if I can switch it at next opportunity
01.09.2014.
- another merry buggie solved: I've noticed that bss section wasn't working in
  some cases, the exe file bloated after adding stack buffer to main.asm; after
  some testing it was determined that in C files bss was working, but not in
  asm.. that led me to believe the bug was in alink, and related to coff;
  however everything was fine, the problem lied in section merging order -
  command for merging .bss into .data was added to the beginning of the linked
  list, and later we had more merging into .data (ie. .strdata to .data) which
  had real data in them and cancelled bss property... C files were placing
  variables to _BSS which got merged later and that's why they worked; so now
  alink defers automatic .bss to .data conversion until user given merges have
  been completed (unless user explicitly lists .bss to .data, then we respect
  user given order)
31.08.2014.
- presli smo na sopstveni stek od 64kb, jednostavnim kopiranjem steka u
  staticki bafer i setovanjem esp-a :) (najbolje sto sam na kraju uspeo da
  smislim :P); i za divno cudo radi,  sada bar ima prostora da se dise, i mogu
  compile-time da povecam ako bude potrebe
30.08.2014.
- GNU make zadavljen u plitkoj bari - napisan Perl build skript (trebalo je
  skoro nedelju dana); sada je build okruzenje daleko bolje - mogu proizvoljno
  da prebacujem fajlove u poddirektorijume, ne moram da navodim
  medjuzavisnosti - sve ce avtomacki :)
  + radi nevidjeno brze, to nisam ni ocekivao, ali prihvatam oberucke ;)
- ispravljen jedan bag u alink-u, mada nisam siguran koliko dobro - ima
  probljem da premesti entry point ako se nalazi u sekciji koja se spaja
  (pre se nije manifestovao jer je main.obj bio prvi u listi za linkovanje od
  fajlova koji imaju .text sekciu, pa su se sve ostale sekcije njemu pripajale)
  kad se uradi rewrite uveriti se da je to sredjeno kako treba
23.08.2014.
- uveo sam callCdecl makro koji generalno poziva cdecl f-je, i prebacio
  WriteToLog na njega
- test case-ovi uvedeni, za crash logger i qAlloc trenutno
- crash handler zavrsen, i radi jako fino ;)
17.08.2014.
- djavolje custom taktike konacno prosle testove
- svi hederi prebaceni na #pragma once
16.08.2014.
- trajalo je neko vreme, ali sanirao sam bagljavi DOSBox debugger! sada fino
  mogu da vidim promenljive, i da ih koristim u izrazima, kao i da postavim
  breakpoint direktno na f-ju; daleko je lakse za dibagovanje sad
27.07.2014.
- definisan predivan syntax highlithting za UltraEdit
- konacno promenjeno TRUE na true :P
13.07.2014.
- dodato ispisivanje objektnog fajla iz kog je simbol potekao pre generisanju
  map fajla - sada je lakse mapirati adresu nazad u simbol pri dibagovanju
09.07.2014.
- pronadjen je veliki nedostatak funkcionalnosti - timu sa igracima s brojevima
  vecim od 16 uopste nije mogla da se edituje taktika, i niko to noje primetio
  za sve ovo vreme; trebalo je i solidno vremena da se implementira
07.07.2014.
- pronadjen je bag - visoki brojevi igraca ne rade u edit tactics meniju; jedan
  deo je ispravljen, ali je jos nesto ostalo
03.06.2014.
- nadjoh da se mala nula kod brojeva igraca nije dobro klipovala.. izgubih
  silno vreme na to, ali sad je presavijaTTo!
- sad sam video (i ispravio) da se negativne koordinate nisu ispravno slale,
  jer se znak gubio u konverziji
01.06.2014.
- slabo nesto apdejtujem ovaj log, ali development ide lagano.. sad sam imao
  jos jedan slucaj da sam pecovao pec :P dodao sam hook na flip i prepisao
  stari koji je proveravao tastere za replay.. a takodje je ubilo ispis dump
  promenljivih
21.04.2014.
- preciscen ovaj log file
20.04.2014.
- poboljsan parsemap.pl, sada mogu da se zadaju simboli i za C header putem
  jednostavne sintakse
17.04.2014.
- uh konacno sam sredio opak bag - desync prilikom druge utakmice za redom; to
  je u stvari bila promenljiva frameCount koju sam VIDEO u diff-u memory
  dump-ova, ali sam MISLIO DA JE IZ MENIJA (AAAAAAAAAAARGHHHH) dajte mi cekic
  da se udaram u glavu... tako da sam presao na sledeci korak i logovao preko
  DOSBox-ove logcpu komande sve izvrsene instrukcije na oba klijenta pre nego
  sto pukne i to uporedjivao, pocevsi od OnGameLoopEnd(), od inkrementovanja
  currentFrameNo - sve pre toga sam otfikario - i zatim ih propustio kroz perl
  skript kome sam definisao memorijske opsege koje da skartira - da bih uklonio
  interapte koji su tu na random uskakali, kao i nebitan kod i kod koji je
  zaista drugaciji (i treba da bude drugaciji) na oba klijenta.. i eto tako,
  propade dan-dva dibagovanja ali sam ipak vrlo zadovoljan sto sam to na kraju
  razresio :P
15.04.2014.
- ubacena in-game Sprite struktura, a stari Sprite preimenovan u SpriteGraphics
12.04.2014.
- evo nakon dosta truda konacno imam neku verziju koja se moze nazvati
  upotrebljivom (nadam se!); poslao sam Davoru videcemo kako ce da ispadne :)
  kontaktirao sam i Playavelija ali se jos uvek ne javlja
01.04.2014.
- zanimljiv bag popravljen slucajno, pri trazenju neceg drugog - imao sam
  vrednost offset f-je + 48, gde je 48 trebalo da bude heksadekadno, ali je
  bilo decimalno; ne bih ovo nikad primetio...
18.03.2014.
- ne znam kako je ovo pre radilo, ali u joy2Status je zaostajala vrednost
  pucanja (iz menija) jer sam imao podeseno 2 igraca na tastaturi (a taj drugi
  izigrava joypad), i to je prouzrokovalo desinhronizaciju, nisam mogao da
  pronadjem sta je skoro mesec dana (iako nisam bas bio predan)... ima i dobra
  strana, u potrazi sam otkrio i uklonio vise drugih bagova ;)
09.03.2014.
- ladno je OpenLogFile bilo u main.asm umesto u debug.c - to je premesteno gde
  treba, i sad je interfejs normalnijil ovo je takodje omogucilo da se izbaci
  poveliki ifdef DEBUG iz main-a
31.01.2014.
- konacno su svi slucajevi menija prosli - to mi je zadalo velike muke, uz
  dosta prckanja po steku i swos internals (slucajevi kada klijent automatski
  prelazi na naredni, ili se vraca na prethodni meni ne putem interakcije
  korisnika vec eksterno - signalom sa mreze)
29.01.2014.
- ubacio sam dword alignment za menije, podaci nisu lepo poravnati (i to
  poravnava sa 'z' :)); probao sam za prosli vikend online play s Dejom ali ne
  radi kako treba, previse je usporeno, ubacicu skip frames
08.01.2014.
- napravljen dos.h header i tu prebacene DOS-related stvarcice iz swos.h
02.01.2014.
- Kakav glupav SWOS bag, koji me je kostao barem par dana; u ClearBackground
  inicijalizuje dx sa mov dx, 384 i onda sub dx, ax; ali posle dodaje na edi
  ceo edx - to je samo slucajno radilo jer se zadesilo da SWOS poziva f-ju sa
  gornjim delom edx-a podesenim na nulu, cim sam ja pozvao iz Watcoma pukla je
  f-ja (tj. napravila haos na ekranu)
26.12.2013.
- neverovatno sta je pogresan opkod napravio, umesto eb otkucam ee (ni sam ne
  znam kako), i onda je umesto skoka izvrsavao neke brljotine (in, out) i nekim
  cudom naleteo na nekakav skok i _nekako_ nastavio sa priblizno ispravnom
  egzekucijom... wtf... nasao sam tek kad sam uocio poziv koji tu ne pripada u
  log fajlu, i ubacio int 1 i pogledao sta se desava na izlazu iz f-ju u
  dibageru (follow up: izgleda sam obrnuo bajtove)
25.11.2013.
- juce sam resio problem sa sinhronizacijom; SWOS je koristio stoppageTimer
  vrednost u kalkulisanju raznih stvari u endzinu (kao i currentTick na jednom
  mestu kod otimanja lopte), a to se inkrementuje iz hardverskog interapt
  hendlera i zavisno je od masine... nije bas kul za 2 simulacije koje treba da
  budu uskladjene, tako da sam izbacio inkrement iz hendlera i ubacio inkrement
  svaki frejm; mislim da ovo moze da utice na duzinu partije i mozda na jos
  neke stvari, trebalo bi istestirati detaljno kasnije, ovako na prvo pogled
  sve radi kul
22.11.2013.
- sredio sam simbol swos_data_base da radi kako treba; to se generise iz perl-a
  prilicno kul da to i moze da se odradi kompajl-tajm :)
23.10.2013.
- danas sam ispravio interesantnu stvar, a nije mi jasno kako je uopste moglo
  da radi; kada se vrsi un-patchovanje radi uklanjanja podrske za drugog igraca
  na tastaturi upisivani su direktno originalni bajtovi iz Ide... pa zar tu ne
  treba fixup? mozda je radilo jer se slucajno uvek na istu adresu ucitavao, ko
  zna, uglavnom to sam sad prepravio [EDIT 25.11.2013.] ok je ako je call, ti
  bajtovi su uvek isti (posto su pozivi relativni)
13.10.2013.
- ladno nije checksum radio... tj. radio je ali samo za prva 32 bajta (lol)
  siftovanje je malo po malo izbijalo informacije o prvim bajtovima; zamenio
  sam to sa rotiranjem i sad je ok (nije ni cudo sto sam naleteo na onog
  poljaka sto je "krekovao", ja mislio covek pecovao checksum proveru kad
  ono medjutim...)
11.10.2013.
- konacno je zavrsen prvi, veliki deo, a to je game lobby :)))
  (mi iz veri hepi)
- mplayer.c preimenovan u mplobby.c
28.09.2013.
- danas sam naucio da izmedju extern char *x; i extern char x[]; postoji golema
  razlika; ako bih stavljao * onda kompajler pokupi dword vrednost odatle, kao
  da je promenljiva, i program trsne; kada stavim [] onda je sve ok, tretira ga
  kao offset
22.09.2013.
- napravljen perl skript koji proverava da li ima nekoriscenih simbola iz
  filter.txt (putem jednostavne tekstualne pretrage), izbaceni suvisni
  zastareli simboli
21.09.2013.
- ispravljen bag u printf - specifikacija se nije resetovala izmedju polja, i
  dodata podrska za %hhd i %hhx
18.09.2013.
- izmenjeno ime create game meniju u game lobby menu (i svemu pridruzenome)
16.09.2013.
- ispravljen bag u bindmp: petlja je isla od 16 pa >= 0, treba > 0 (ispisivao
  je 17 bajtova po liniji)
- ispravljen bag u pe2bin: value se nije dekrementovao kod odlucivanja da li
  dodeliti fixup SWOS code ili data, tako da se pogresno dodeljivao data umesto
  kod za f-je bliske 0xb0000 (ako su do velicine SWOS virtual size bliske to ce
  se desiti), sto je naravno rezultovalo skrsivanjem (pre ili nisam koristio te
  C f-je koje su pri vrhu, blizu data, ili je .swos sekcija bila na drugoj
  poziciji, sa visom adresom)
- izostavih swos_libc_ prefiks kod 2 nove f-je i trs... ubije i ceo windows :P
13.09.2013.
- Sada WriteToLog cuva i flegove (da, i to se desilo)
12.09.2013.
- Ok, mislim da je join game zavrsen (sem konektovanja na igru - to cu sad da
  pokusam)
- Apgrejdovao sam se na UltraEdit 13.10 btw ;)
- Jebeni nop protracio skoro pola sata
11.09.2013.
- Boze kako ruzan bag, nesto sam prepravljao i nekako ostane
  sizeof(IPX_Address) umesto member_size(IPX_Address, node), tako da je fino
  prepisivalo socket i source network address... Nije ni cudo sto nikako nije
  uspevao da posalje reply
- Menjam sistem pristupa C funkcijama unutar SWOS-a, sada im dajem prefiks
  swos_libc_, a u util.c pravim C prototip koji poziva f-ju iz SWOS-a preko
  pokazivaca; ovako se nece desiti da ih slucajno pozovem direktno
10.09.2013.
- Log fajl sada ima vreme na svakoj liniji
- Otkrio sam da imamo jako jako malo stack memorije (3.7kb na pocetku), nakon
  cestog pucanja programa uzrokovanog stack overflow-om; sada je dosta bafera
  prebaceno sa steka na bss
- Odusevljen sam koliko brze sada radi build
- Ladno sam nasao bag u memset... Ko zna na cemu sam bio kad sam to pisao,
  iskoristicu onu iz SWOSa
09.09.2013.
- Konacno finisiran rad na alink-u, i RADIIIIIIIIIIIII!!!!! Milenijumski bag je
  resen, MS Link je izsutiran! Mrss! Mrsss! Mamu ti jebem!!!
- Jedino sto se swopp.bin povecao za 3kb, sigurno usled nekog algnment-a, odoh
  da vidim za to...
- Nije ni cudo sto je manji fajl, govedo pola stvari nije linkovalo u fajl..
  Binarni fajl je sada per-fektan! :)
06.09.2013.
- Haha u starom Ultra Edit-u po default-u ne koristi Unix style regularne
  izraze, mora da se ukljuci, mislio sam da je bagovit i instalirao noviju
  verziju
- Usled nezadrzive lavine napretka, iako se verovalo da to vise nije moguce,
  cudesni sistem meni makroa biva pojacan naprednim state-of-the-art makroima
  opremljenim mogucnoscu definisanja simbola sa rednim brojevima zeljenih
  stavki
05.09.2013.
- Konacno sam resio zasto nece da prima paket, bio je problem sa FP_SEG i
  FP_OFF makroima, nisu vrsili translaciju na nacin koji je meni trebao (mozda
  bi funckionisali da sam alocirao memoriju preko onog drugog int-a?), i to je
  naravno bilo jebeno poslednje mesto koje sam pogledao, nakon sto sam isprobao
  boga oca stvari...
- Ispravio bag u vsprintf, nije radilo kako treba za %c (i ladno je bibliotecka
  funkcija bila bagovita - tj. moj prepev verovatno)
- Logo bitmap data izsutiran iz direktorijuma za sors + napravljeno fino
  pravilo da se mejkuje. Da ne zagadjuje kad hocu da pogledam velicinu koda :P
03.09.2013.
- Ladno sam ispravio deo koda i dokumentaciju menija (inace vrlo dobro
  izucenih), vezano za retko korisceno "preskakanje" stavki (kada je stavka na
  koju korisnik zeli da ide iskljucena ili nevidljiva, pa se odlucuje koja ce
  stavka naredna biti selektovana)
31.08.2013.
- Sjajan bag ispravljen. Najobicnija nepaznja i prepisivanje memorije, ali sta
  sam sve pokusao u tih par sati... Bar sam namestio kljakavi DOSBox dibager :)
29.08.2013.
- Izgleda sam resio jednu od misterija koje su me mucile. Naime, ponekad bi se
  desavalo da kombinacija asembler+linker naizlged izgenerise pogresan poziv.
  Jednostavno call xxxxx instrukcija bi umesto gde treba skocila
  pitaj-boga-gde, i program bi padao. Secam se koliko me je to samo uzasno
  nerviralo. Ali evo danas sam bio iznenadjujuce miran, i za nesto vise od pola
  dana sam nasao razlog :) Ne tacan, ali barem priblizan :P - problem je bio
  sto sam pisao kod u .data sekciji. Sta tacno ne valja ne znam, ali vrlo
  verovatno je alignment sjeban + imam i ono spajanje sekcija pa ko zna sta od
  toga na kraju ispada. Kad se kod stavi u .text sekciju kao sto bog zapoveda
  onda sve radi kako treba.
  I pazi kad sam ladno predvideo string menu entries. Svaka cast. Meni.
07.01.2005.
- GoalScored raskantano!
- ShowResult raskantano!
  Imam imena svih sprajtova, osim jednog koji je izgleda mrtva promenljiva.
  Sada cu popuniti ono sto ranije nisam mogao u vezi sprajtova.
- game_state 22 provaljeno
06.01.2005.
- nastavljeno od juce... one promenljive za penale su stvarno izvukle stvari...
  Provaljeno polje 40 u ingame team strukturi - broj auto golova.
05.01.2005.
- posle dosta vremena, konacno nekakav napredak; game_state skoro sasvim
  provaljen; provaljeno dosta promenljivih vezanih za izvodjenje jedanesteraca
  posle utakmice, i jos neke stvari provaljene... eto, u jeku Clan Lord-a,
  cekajuci na Holandjanina...
19.07.2004.
- verzija 1.4 je objavljena
- Watcom/M$ link kombinacija pravi _uzasne_ probleme; nakon odredjene
  kombinacije static i non-static varijabli/funkcija, kompajler (ili linker)
  odlepi - pristupa promenljivama sa nekim random offsetom, skace u neki random
  deo koda...
15.07.2004.
- podrucje baga je definitivno precizirano na klupu - svaki kvarni snimak puca
  nakon pozivanja klupe
- problem je u tome sto kada se vraca sa klupe u igru poziva se funkcija koja
  brise sadrzaj trenutnog hil bafera, i resetuje pointer na pocetak; bag se
  desava u sledecoj situaciji:
  - sadrzaj bafera je snimljen, predzadnji i zadnji dword su koordinate kamere
    i golovi, pointer se resetovao na pocetak i tu su upisani flegovi
  - bafer dalje se i dalje puni, recimo do pola
  - poziva se klupa, i tu se ostaje do recimo 3/4 bafera
  - odlazi se sa klupe, bafer se brise, pointer resetuje, i tu se brisu
    nesnimljeni flegovi (ouch)
  - nastavlja se upis u bafer, pocevsi od kamera, golovi, flegovi
  - tako dobijamo situaciju koja se pojavljuje u kvarnim .rpl fajlovima:
    kamera, golovi, [fale flegovi!!!], kamera, golovi, flegovi...
- smisljam kako da resim problem: najbolje bi bilo sacekati da kamera ode do
  klupe, snimiti jedan frejm, i onda zabraniti dalje snimanje dok kamera opet
  ne krene ka terenu; trenutno sam namestio da se sve snima
14.07.2004.
- u log fajl se na startup-u upisuju adrese ucitavanja SWOS-a i SWOS++-a kako
  bi se u slucaju pucanja mogla utvrditi tacna instrukcija
- prckano oko snimanja replay-a; moguce je da se bag pojavljuje ako neka
  funkcija dira goal_base_ptr koji se koristi za snimanje i podesi ga malo
  ispred baznog bafera
- vratio sam pravljenje listinga za .asm fajlove - samo je za nijansu sporije
- bag nije zbog goal_base_ptr-a - on je uvek konstantan
08.07.2004.
- ispravio kod u pe2bin za zaokruzivanje na 4, x += 4 - x % 4 ne valja, u
  slucaju kada je x deljivo sa 4
18.06.2004.
- veoma bitne stvari se kriju u UpdateBall - cak mislim celokupna fizika lopte
  i njena interakcija sa terenom u zavisnosti od uslova
15.06.2004.
- SWOS2004 preliminarna verzija poslata
02.06.2004.
- i pitanje dana ostaje: Where's The Walrus?
01.06.2004.
- veliki dogadjaj, otkrivena je (zasigurno) prva AI rutina; bavi se izvodjenjem
  auta, a mozda je i opstija
30.05.2004.
- provera sredjena, i radi dobro, valjda nema neku rupu (testira se da li je
  "prava" DOS verzija manja od 6.0, i onda se izdaje upozorenje - int 0x2f ne
  radi na dve'iljadarci)
- izbacen SWOS++ 1.3 i SWPE 0.8
22.05.2004.
- velicina tekst sekcije je zaokruzena na 4 bajta da bi data sekcija bila
  dword poravnata
- uradjena provera verzije Windows-a (ali netestirano na w2000)
21.05.2004.
- Aminta je nasao bag: izgleda kada se menjaju kontrole timova, i uradi se
  save, postoji neki memory overwrite u tom timu sto prouzrokuje krshenje
  SWOS-a kada taj tim kasnije treba da igra utakmicu
- bag je nadjen i ispravljen: problem je bio u tome sto kada snimam diy pozivam
  SWOSovu funkciju koja u sebi ima poziv CommonMenuExit - koja ocekuje da bude
  pozvana u kontekstu glavnog menija. Tako ona lepo uzme pointer na deseti
  entry koji je titl, formira ime takmicenja i upise ga u taj entry. Posto je
  aktivan moj meni i taj entry pokazuje na ime nekog tima, to ime ce biti
  prepisano, kao i neki bitni podaci kasnije. Ja kad sam testirao izgleda nisam
  koristio duga imena pa je sve radilo (a na ime tima nisam obracao paznju).
  Sredio sam tako sto sam poziv PrepareMenu odozdo prebacio ispred if-a.
- podesio sam cp kod make store da cuva originalne datume fajlova
- iskljucio sam pravljenje listinga pri asemblovanju - testiracu da vidim da li
  radi brze
20.05.2004.
- diy meni je izmenjen da radi kao load
19.05.2004.
- ta da!!! zavrsen je j*beni diy edit meni i radi!!!! 12 je i 10 (am); sacu da
  posaljem Aminti, nek se on bahce sa time (objavicu kasnije)
17.05.2004.
- meniji oko biranja timova imaju pogresna (preusko postavljena) imena;
  provaljena jedna od najvecih tajni u vezi menija gde se biraju timovi;
  takodje provaljeno dinamicko podesavanje stavki (laganica)
16.05.2004.
- uspeo sam da izbacim vsprintf iz release-a: dosetio sam se da upotrebim
  SWOSovski PrimitivePrintf - primitivno, ali za moje trenutne potrebe dovoljno
- proslo 12 bre... nesto sam mnogo umoran, a sutra se rano dizem... treba
  pronaci tacnu lokaciju menija koji prikazuje selektovane timove u diy
  takmicenju i radi dinamicko podesavanje velicine stavki na osnovu broja
  timova (i da maznem taj kod, bwahahaha...)
15.05.2004.
- evo radi se na tom meniju
- nazalost, prebacih vsprintf.c u release verziju (zbog sprintf-a koji se za
  sada koristi samo na jednom mestu - mozda kasnije izbaciti), i naduva se...
14.05.2004.
- pocetak rada na novoj verziji - krecem sa ubacivanjem nove stavke menija
03.05.2004.
- pustena verzija 1.2.3 sa _kompletno_ ispravljenim bagovima koji se ticu
  prikaza brojeva vecih od 16
- upravo sam primetio da SWOS++ blokira normalan rad highlights-a: samo prvi
  highlight je snimljen u fajl
02.05.2004.
- upravo sam otkrio da SWOS++ nije kompatibilan sa EGA grafikom - kad krene
  utakmica vide se samo brlje, i posle nekog vremena pukne
- EGA grafika ubivena
- sredjeni brojevi igraca kada dobijaju neki karton
- EGA grafika ubivena samo u debug modu (izgleda da se kolje sa debug sistemom)
27.04.2004.
- dosta uradjeno
26.04.2004.
- izuzetan uspeh, velika kolicina podataka pridobijena i dosta gresaka u
  dokumentaciji ispravljeno
- dodat novi tip za dump: 'p' = pointer, samo ispis vrednosti kao dword
25.04.2004.
- velicina release swospp.bin-a skresana za kilobajt - PrintString() i pratece
  stvarcice su otisle pod jedan #ifdef DEBUG
- provaljeno dosta zanimljivih stvari preko dump-var debug sistema (ziv bio)
- potvrdjeno da su x, y i z koordinate sprajtova pocinju na +30 (a ne na +32
  kako je ranije stajalo)
- verzija 1.2.2 objavljena, a verzije 1.2.1 i 1.2 sam izbacio sa download
  strane da ih ne bi ljudi skidali (bagovite su)
23.04.2004.
- sredjeni i brojevi igraca na klupi (ubijena procedura koja ih setuje)
22.04.2004.
- nova verzija, 1.2.1, i ispravljena je link strana da otvara linkove u novom
  prozoru umesto u frejmu
- sada se poceci sekcija u swospp.bin align-uju na 4 bajta
21.04.2004.
- sredjen bug u substitutes meniju kada se prikazuje djubre umesto brojeva
  vecih od 16, i meni je malo rasiren i imena i pozicije pomerene kako bi sve
  to lepo stalo
20.04.2004.
- dependencies u makefile-u sredjene - stavljao sam da .c i .asm fajlovi zavise
  od include-ova (umesto .obj) - doh! (thanks Dule)
17.04.2004.
- brojevi igraca zavrseni - uradjeno centriranje i specijalno tretiranje
  slucaja kada idu dve jedinice jedna za drugom, tu ih priljubljujemo za jedan
  piksel - izgleda mnogo lepse
- dodato je i trece ime executable u patcher, za underdogs SWOS, i size
  mismatch vise nije fatalna greska vec samo upozorenje da bi cela stvar radila
  sa Amintinom patchovanom verzijom SWOSa
- za default zip paker vracen winzip, zbog dugih imena (tj. zbog case-a)
- izbacujem rar verzije arhiva sa sajta
- sve to upakovano i izbacena nova verzija 1.2
15.04.2004.
- zapocet ovaj log fajl
- izolovan random crash bug kod ispisa brojeva igraca vecih od 16:
  pri ispisu male nule, u VerLine, tacno na mestu pristupa memoriji
  (kod instrukcije mov [esi], al)
- i evo, u 20:46 pisem ispravku koda; u pitanju je bila negativna vrednost
  ipsilona (-1) koja je sve vreme pravila probleme
- i sredjeno... bar bi trebalo, odigrao sam celu utakmicu i pogledao replay
  bez problema, jedino sto se iznad sudije pojavio neki brljavi S sprajt kada
  je davao zuti karton