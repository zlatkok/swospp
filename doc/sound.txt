Memory buffers
==============

Three memory buffers are used:
linAdr982k  - sound effects + intro & game crowd chants [size 1,005,773 bytes]
linAdr2_6Mb - commentary (pre-loaded) [size 2,812,420 bytes]
linAdr120k  - game interruption comments (corners, tactics change, substitutes,
              throw-ins, yellow/red card samples) [size 122,880 bytes]

Sound format
============

All sounds the are in RAW format, 22kHz mono (11kHz for lower quality samples -
when there is less memory available). Only two exceptions are referee final
whistle and foul whistle which are 11Khz always.

Channels
========

Comments will use just one channel, while chants and sound effects aren't
limited (they will play on a first available channel).
Some comments will interrupt an ongoing comment, while others will let it play
and not play themselves. More details on that below.

Loading
=======

Before the game starts all the commentary, sound effects and intro chants are
loaded into the memory from the disk. Comments file names are contained in
commentaryTable, every file from that list is loaded to linAdr2_6Mb, one after
another. Memory allocated is 2,812,420 bytes and total file size must not go
over.

Sound effects are loaded either from soundEffectsTable (higher quality) or from
sfxLowerQualityTable (lower quality), into linAdr982k, one after another. At
offset 566,064 into linAdr982k is intro cheer, loaded from introTeamCheersTable
based on team stripes color. That's why sound effects must fit into 566,064
bytes (it's in fact their precise combined size).

Part of the comments (those that interrupt game) are loaded from the disk only
when they're about to be played. Same goes for end game samples.

Loading functions and times of execution:
- executed before the game loop starts:
    LoadCommentary
    LoadSoundEffects
    LoadIntroChant
        after these finish, everything that needs to be preloaded is in memory
- executed after the game:
    LoadAndPlayEndGameComment
- executed at certain points:
    LoadCrowdChantSample
        executes after auto-replay fade if loadCrowdChantSampleFlag is set
        (loadCrowdChantSampleFlag gets set right after the goal, and reset
        after calling LoadCrowdChantSample); it will set things up for
        PlayCrowdChants

Sound playing functions
=======================

When a commentary is about to be played one of the following functions is
invoked:
    PlayGoodJumpHeaderComment   [currently not used in the game]
    PlayPenaltyGoalComment
    PlayPenaltyMissComment
    PlaySavedPenaltyComment
    PlayPenaltyComment
    PlayFoulComment
    PlayHarderFoulComment
    PlayGoodPassComment
    PlayGoodTackleComment
    PlayPostHitComment
    PlayBarHitComment
    PlayHitFrameComment         [currently not used in the game]
    PlayKeeperClaimedComment
    PlayNearMissComment
    PlayGoalkeeperSavedComment
    PlayOwnGoalComment
    PlayGoalComment

These are preloaded comments, besides them we have functions which load
comments from the disk right before playing (probably to save some memory):
    PlayYellowCardSample
    PlayRedCardSample
    PlayCornerSample
    PlayTacticsChangeSample
    PlaySubstituteSample
    PlayThrowInSample

They all end up calling PlayCommentarySample with following parameters:
    ebx -> sample table in form of array of:
            dword - offset in linAdr2_6Mb
            dword - sample size
    cx   - last played sample index
    D1   - max sample index (bit-mask)

Each commentary function provides a table with offsets into linAdr2_6Mb and
sample sizes, and this is hard-coded into the executable.

PlayCommentarySample will pick and play a random sample from the given table
(index is generated randomly and AND-ed with max sample bit-mask), taking care
not to play last played sample again. In the end it will call function
PlayCommentarySample22Khz to play the actual sound data.

Return value is an index of selected sample so calling function can remember it
for the next time (to prevent playing it twice in a row).

PlayCommentarySample22Khz first stops any running commentary. Then it tries to
find available channel on which to play. At the initialization as much channels
as AIL can handle (but not more than 32) are allocated. I think the code has a
bug in case all the channels are busy playing, it will try to access channel
index beyond the end of an array. The volume of sample is hard-coded to 127
(maximum AIL volume).

After finding available channel it will initialize it, set the sound data for
reproduction (playback rate 22050Hz, mono, max volume, play once no looping)
and register a callback when it's finished, which will only set the commentary
channel handle to -1 (that's how it knows if anything is still playing). It
will return handle of the sample that's playing.

That handle is later checked by following functions:
    PlayGoodJumpHeaderComment
    PlayGoodPassComment
    PlayGoodTackleComment

They will check if a commentary sample is already playing, and if so will not
play and will not interrupt it.

Functions that unconditionally overwrite it (and can therefore interrupt
ongoing comment) are:
    PlayPenaltyGoalComment
    PlayPenaltyMissComment
    PlaySavedPenaltyComment
    PlayPenaltyComment
    PlayFoulComment
    PlayHarderFoulComment
    PlayPostHitComment
    PlayBarHitComment
    PlayHitFrameComment
    PlayKeeperClaimedComment
    PlayNearMissComment
    PlayGoalkeeperSavedComment
    PlayOwnGoalComment
    PlayGoalComment

PlayGoalkeeperSavedComment checks if penalties are being performed and switches
to PlaySavedPenaltyComment accordingly.

PlaySensationalGameComment and PlayItsBeenACompleteRoutComment load their files
into linAdr2_6Mb overwriting loaded comments, which is fine since they are
played when the match is over.

PlaySfxSample22Khz is equivalent of PlayCommentarySample22Khz, but for sound
effects. It does pretty much the same thing, except it doesn't test if any
effects are still playing, and the calling functions don't use its return value
(effects in progress are never interrupted by the effects that follow, new
effects get played on a next available channel).

PlayChantSample22Khz is almost identical to PlaySfxSample22Khz, except it saves
index of the chant channel to chantSample and sets loop count to 0 (= loop
continuously) and volume to 0 (takes 2 parameters less). It is called by:
    PlayFansChant4lSample
    PlayFansChant10lSample
    PlayFansChant8lSample
    PlayIntroChantSample
    PlayResultSample

PlayRefereeWhistleSample22Khz is also identical to PlaySfxSample22Khz, except
it saves index of whistle channel to refereeWhistleChannel. It is called by:
    PlayEndGameWhistleSample
    PlayFoulWhistleSample

End game comments
=================

LoadAndPlayEndGameComment is invoked at the end of the game. Depending on the
result it will load homewinl.raw, boowhisl.raw or cheer.raw into linAdr982k
offset 566,064 and play it. Then based on the number of goals scored a comment
is played. If it was a victory with 3 or more goals of difference, "it's been a
complete rout" comment is played. If it's a draw it should play "oh so close"
comment, but due do a bug it will never be played. Finally, if there was 4 or
more goals in total, "sensational game" comment is played.

Queued comments
===============

Besides immediately played comments (pre-loaded, do not interrupt the game), we
have queued comments, which are all played by PlayEnqueuedSamples.

PlayEnqueuedSamples is called once each frame, and it maintains a bunch of
timer variable (one per each comment), and when any of them count down to zero,
their respective comment gets played.

Those comments are: yellow card, red card, good pass, throw-in, corner,
substitute, change of tactics, goal missed.

Function will only play one comment per frame and once an expired timer is
detected, other timers will not be decremented. Exception is miss goal sample
which is always checked. Only miss goal counts as sound effect, everything else
count as commentary.

PlayCornerSample, PlayTacticsChangeSample, PlaySubstituteSample,
PlayThrowInSample call PlaySampleFromTable, which will load a random file from
a given table into linAdr120k and play it. It also uses
PlayCommentarySample22Khz so it stops any comment already running.

In the end PlayEnqueuedSamples calls PlayCrowdChants, more details on it below.

Crowd chants
============

PlayCrowdNoiseSample is called once at the start of the game and it initializes
commentarySampleHandle to 0 and loops bgcrd3l.raw (background roaring crowd)
during the entire game. After that, PlayFansChant4lSample is invoked once.

There are three basic chants:
CHANT10L.RAW    - most peaceful crowd
CHANT4L.RAW     - most energetic crowd
CHANT8L.RAW     - medium crowd

Intro chant sample is loaded by LoadIntroChant by indexing the following table
with the primary team color:
introTeamChantsIndices db -1, -1, 3, -1, 0, 0, 0, 1, -1, 1, 2, 5, -1, 5, 1, 4
and then using the value to index file names table:
"sfx\fx\COMbrown.RAW"
"sfx\fx\COMgreen.RAW"
"sfx\fx\COMred.RAW"
"sfx\fx\COMwhite.RAW"
"sfx\fx\COMyelo.RAW"
"sfx\fx\COMBLUE.RAW"

It is loaded to offset 566,064 of linAdr982k, and a function pointer to intro
chant playing function is set. If an index from above table is negative, that
pointer will point to PlayFans4lSample, and nothing will be loaded.

LoadCrowdChantSample is called after a goal, but only if auto-replays are
turned on (very likely a bug). Based on the result it will decide if it will
load a sample to offset 682,253 of linAdr982k from the following table:
    EREWEGO.RAW  302.467
    EASY.RAW     32.064
    FIVENIL.RAW  310.528
    FOURNIL.RAW  318.720
    THREENIL.RAW 323.520
    TWONIL.RAW   298.888
    ONENIL.RAW   327.936

However linAdr982k is only 1,005,773 bytes long, meaning the biggest file it
could take is 323,520 -- and ONENIL.RAW is 327,936 bytes long leading to memory
overwrite (needs 4,416 bytes more).

But this may not be observed in original SWOS as the function that determines
which file to load uses eax register with high word uninitialized, so it's
unclear what happens there.

LoadCrowdChantSample works in tandem with PlayCrowdChants and modifies an array
of pointers to chant playing functions:
    playIntroChantSampleOffset dd offset PlayIntroChantSample
    playFansChant8lOffset dd offset PlayFansChant8lSample
    playFansChant10lOffset dd offset PlayFansChant10lSample
    playFansChant4lOffset dd offset PlayFansChant4lSample

playIntroChantSampleOffset might get replaced with chant4l by LoadIntroChant.
Chant10l might get replaced with crowd chanting the result, or something else
from the chants filename table above.

Chants during the game are played by the function PlayCrowdChants (called at
each frame by PlayEnqueuedSamples). It first checks if chant fade-in is in
progress, and continues with it if so. Fades always go from volume 0 to 64, and
vice versa. Then the timer that counts down to next chant is checked and if
it's non-zero it gets decremented. When it does come to zero, fade-out timer is
checked, and if it's non-zero, fade-out is proceeded with.

When chant finally ends, there is some logic on how to select a new one:
- there is a 50% chance of delaying next chant by a random number of ticks:
  0-512, essentially creating a pause in chants
- if it's decided to play the chant, play crowd chants function pointer is
  checked, and if it has a value there is a 50% chance of simply playing it
  again
- if no value or random roll fails, new chant is selected: if
  LoadCrowdChantSample has marked the result as interesting, chant with index
  2 is loaded from the chant functions table (ostensibly a most dynamic chant),
  otherwise a random chant from the table will be played
- after playing it, fade-in and fade-out timers are reset to 128 ticks and next
  chant is queued after 500-1012 ticks randomly

Volume
======

All commentary is played with volume 127 (max). All chants are played with
volume 0 and indefinite loop. Sound effects have varying volume:
    crowd noise     - 100 (+ indefinite loop)
    miss goal       - 127
    home goal       - 127
    away goal       - 127
    kick            -  25
    ball bounce     -  42
    end game crowd  - 127
    referee whistle -  42   <- 2 11Khz samples played by
                               PlayRefereeWhistleSample22Khz

Misc.
=====

Functions PlayHomeGoalSample and PlayAwayGoalSample actually play one and the
same sample (homegoal.raw), even though the code is in place to call each of
them at appropriate moment.

PlayStartGameSample (unused function) does a weird thing when invoking
PlaySfxSample22Khz, it doesn't set value for volume (ebx) at all, and sets ecx
(loop count) to 111.

PlayMissGoalSample seems to have been originally supposed to be enqueued (it
has its own timer and code to test and play it in PlayEnqueuedSamples), but the
timer never seems to be set. Instead, the routine is played directly from
several places. Maybe they changed their mind? :)

Files
=====

Sound effects are on the CD, in the directory SFX\FX, and they are:
(length for 22kHz samples)

file name:      length:   total offset:   description:
----------      -------   -------------   ------------
bgcrd3l.raw       59682          0        sound of the roaring crowd (loops)
bouncex.raw        2633      59682        ball bounce
homegoal.raw     194187      62315        screaming when home team scores
kickx.raw          2105     256502        kick sound
whistle.raw        1080     258607        referee whistle (short)
missgoal.raw      69675     259687        crowd awww after missing a goal
endgamew.raw      23882     329362        final whistle (11kHz)
foul.raw           2518     353244        foul whistle (11kHz)
chant4l.raw       56227     355762        crowd chanting
chant10l.raw      82191     411989            -||-
chant8l.raw       71884     494180            -||-

Comments (English), loaded from table commentaryTable:

file name:      length:   total offset:   description:
----------      -------   -------------   ------------
(goal)
m158_1_.raw       29952          0        "What a goal"
m158_2_.raw       44032      29952        "Fantastic goal"
m158_3_.raw       40576      73984        "Superb strike"
m158_4_.raw       22528     114560        "It's in the net"
m158_5_.raw       55311     137088        "GOAL"
m158_7_.raw       28160     192399        "It's in the back of the net"
(keeper saved)
m313_7_.raw       31744     220559        "Ahh good goalkeeping"
m313_a_.raw       36224     252303        "Superb save"
m313_b_.raw       28672     288527        "Oh what a great stop"
m196_w_.raw       35188     317199        "Oh what agility"
m196_x_.raw       31185     352387        "Great save the keeper"
m196_z_.raw       49664     383572        "That was a fantastic save"
m233_1_.raw       49646     433236        "Oh magnificent stop by the keeper"
(own goal)
m158_p_.raw       45458     482882        "What on earth was he thinking of"
m158_q_.raw       48199     528340        "It's a full moon, Balloons are out"
m158_s_.raw       47754     576539        "O.G, What a terrible mistake"
m158_t_.raw       17024     624293        "Oh No"
m158_x_.raw       67660     641317        "What a ridiculously soft goal to "
                                          "concede"
m158_y_.raw       52992     708977        "Oh so silly, Oh so soft"
(near miss or keeper saved)
m10_j_.raw        46336     761969        "Inches wide, only inches"
m10_k_.raw        66099     808305        "Ooooooo What a shot that was"
m313_6_.raw       36992     874404        "That's well claimed by the keeper"
m313_8_.raw       31190     911396        "Keeper's come, he's got it"
m313_9_.raw       20736     942586        "Well claimed"
m313_c_.raw       34816     963322        "Good hands, Good hands"
m313_d_.raw       37618     998138        "Ahh great hands there"
m313_g_.raw       15360    1035756        "Keeper's up"
m313_h_.raw       22272    1051116        "Keepers ball"
(post/bar hit)
m10_d_.raw        40448    1073388        "Oooooo desperately close"
m10_e_.raw        51818    1113836        "Ooooo only a lick of paint away "
                                          "there"
m10_f_.raw        50129    1165654        "The woodwork saved them on that "
                                          "occasion"
m10_g_.raw        43554    1215783        "Keeper beaten but it's off the "
                                          "woodwork"
m10_h_.raw        47548    1259337        "Oooor Crash off the post"
m10_r_.raw        25088    1306885        "He's hit the woodwork"
m10_s_.raw        44215    1331973        "It's in, No it's hit the woodwork"
m10_t_.raw        44160    1376188        "Has to be, It's off the post"
m10_i_.raw        33280    1420348        "Smack it's hit the bar"
m10_u_.raw        39179    1453628        "It must be, It's off the bar"
(ball won cleanly)
m349_7_.raw       21760    1492807        "Well won"
m349_8_.raw       49852    1514567        "Ooorr great determination in there"
m349_e_.raw       28928    1564419        "That's a great tackle"
m365_1_.raw       17408    1593347        "Well in there"
(good pass)
m313_i_.raw       32256    1610755        "That's played nicely to feet"
m313_j_.raw       31488    1643011        "Ahh superb ball there"
m349_4_.raw       22016    1674499        "Well played"
m313_o_.raw       31744    1696515        "That's a lovely pass"
(foul)
m158_z_.raw       18460    1728259        "Referee"
m195.raw          30720    1746719        "That's a terrible tackle"
m196_1_.raw       42496    1777439        "Ooooo What a dreadful foul that was"
m196_2_.raw       45973    1819935        "He'll be lucky to stay on the "
                                          "pitch after that one"
m196_4_.raw       50176    1865908        "You could say that challenge was "
                                          "a bit over the top"
m196_6_.raw       17985    1916084        "Free kick there"
m196_7_.raw       29745    1934069        "Ooor that's a definite free kick"
(penalty given)
m196_k_.raw       18560    1963814        "Penalty"
m196_l_.raw       40800    1982374        "Oooooh It's a penalty"
m196_m_.raw       22572    2023174        "Penalty ref"
m196_n_.raw       53504    2045746        "A penalty a great chance to score"
(penalty saved)
m196_t_.raw       36409    2099250        "It's Saved"
m196_u_.raw       44535    2135659        "The penalty's saved"
m196_v_.raw       28928    2180194        "He's saved it"
(penalty missed)
m233_2_.raw       48128    2209122        "No bottle there what so ever"
m233_4_.raw       29696    2257250        "His bottle went there"
m233_5_.raw       43316    2286946        "Oh No he's missed it"
m233_6_.raw       69120    2330262        "One against one from twelve "
                                          "yards, he's missed it"
(penalty goal)
m233_7_.raw       76544    2399382        "One against one from twelve "
                                          "yards, superbly placed"
m233_8_.raw       37120    2475926        "Aoor superbly placed"
m233_9_.raw       38726    2513046        "No question it's in"
m233_c_.raw       47400    2551772        "Oh the ice men comet"
(headers)
m33_2_.raw        28416    2599172        "That's a super spring"
m33_3_.raw        14592    2627588        "Nice jump"
m33_4_.raw        23808    2642180        "He's up, He's got it"
m33_5_.raw        22528    2665988        "Well Reached"
m33_6_.raw        56064    2688516        "He's up for it, well met as well"
m33_8_.raw        20992    2744580        "He's got his head to it"
m33_a_.raw        19968    2765572        "Ooo He's up for it"
m33_b_.raw        26880    2785540        "Superb header"

total size: 2,812,420

References
==========
Mic's guide to SWOS customizing [accessed at 21.10.2018.]
http://www.sensiblesoccer.de/forum/index.php?topic=26844.0

The list of sounds was snatched from Paul Turner's SENSI SUPERstar website ;)
[accessed 21.10.2018.]
http://paul.swos.eu/sensi/editinfo.htm#list
