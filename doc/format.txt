offset  size  description
------  ----  -----------
   0      4   signature, 'ZKBF', big endian
              "Zlatko Karakas Binary Format"
   4      4   version, word.word, major.minor
   8      4   header size
  12      4   checksum
  16      4   offset to code & data
  20      4   code & data size
  24      4   offset to patch data
  28      4   patch data size
  32      4   offset to relocations
  36      4   relocations size
  40      4   BSS size
  44      4   entry point (init routine)

Checksum se izracunava po sledecem algoritmu, pretpostavljajuci da su code &
data, patch data i relocations linearan blok memorije na koji pokazuje ptr:

uint CalcChecksum(char *ptr)
{
    uint i, c;
    for (i = c = 0; *ptr; ptr++, i++) {
        c += i + *ptr;
        c <<= 1;
        c ^= i + *ptr;
    }
    return c;
}

Relokacije su podeljene u sest delova, i svaki od njih se zavrsava sa
(dword)-1.
1) offseti u code & data kojima se dodaje swos_code_base
2) offseti u code & data kojima se dodaje swos_data_base
3) offseti u code & data kojima se dodaje load_address
4) offseti u patch data kojima se dodaje swos_code_base
5) offseti u patch data kojima se dodaje swos_data_base
6) offseti u patch data kojima se dodaje load_address